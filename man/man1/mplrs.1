.TH "mplrs" "1" "2020.9.19" "September 2020" "mplrs  7.2"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SS "Name"
mplrs \- Convert between representations of convex polyhedra, remove redundant
inequalities, do Fourier-Motzkin elimination (parallel version)\&.
.SS "Synopsis"
.HP \w'\fB\ mpirun\ \fR\fBmplrs\fR\ 'u
\fB mpirun \fR \-np \fInum_proc\ \fR\fBmplrs\fR \fIinfile\fR [\fIoutfile\fR] [\fIoption\fR...]
.br

.SS "Description"
.PP
A polyhedron can be described by a list of inequalities (\fIH\-representation)\fR
or by a list of its vertices and extreme rays (\fIV\-representation)\fR\&.
\fImplrs\fR
is a parallel version of lrs, and converts a H\-representation of a polyhedron to its V\-representation, and vice versa\&.\ \& These problems are known respectively at the
\fIvertex enumeration\fR
and
\fIconvex hull problems\fR\&.
With \fBlrs\fR options \fBredund\fR or \fBredund_list\fR in the input file it 
will do parallel execution of \fBredund\fR (redundancy removal).
With \fBlrs\fR options \fBproject\fR or \fBeliminate\fR in the input file it will do parallel
execution of \fBfel\fR (Fourier-Motkin elimination).
.PP
.SS "Usage"
.PP
The number of processors
\fInum_proc\fR
specified to
\fBmpirun\fR
should be 4 or higher.
Some lrs input file options are not supported by 
\fBmplrs\fR.
.PP
.SS "Options"

.PP
\fBmplrs\fR
supports the following options, where default values are given in brackets\&.
.RS 4
\fB\-checkp <checkpoint file>\fR if mplrs is terminated by \-stop or \-time then it can be restarted using this <checkpoint file> and \-restart
.RE
.RS 4
\fB\-countonly\fR don\*(Aqt output vertices/rays/facets, just count them
.RE
.RS 4
\fB\-freq <file>\fR store frequency data in <file> for use by gnuplot, see below
.RE
.RS 4
\fB\-hist <file>\fRstore parallelization data in <file> for use by gnuplot, see below
.RE
.RS 4
\fB\-id <initial depth>\fR [2] the depth of the original tree search to populate the job list L
.RE
.RS 4
\fB\-lmax <int>\fR[lmin] if job list |L|>np*lmax then then maxc is replaced by maxc*scale
.RE
.RS 4
\fB\-lmin <int>\fR[3] if job list |L|<np*lmin then the maxd parameter is set for all producers 
.RE
.RS 4
\fB\-maxbuf <n>\fR[500] controls maximum size of worker output buffers
.RE
.RS 4
\fB\-maxc <maxcobases>\fR[50 (*scale)] a producer stops and returns all subtrees that are not leaves to L after generating\ \& maxc nodes\ \&\ \&\ \&
.RE
.RS 4
\fB\-maxd <depth>\fR[0] a producer returns all subtrees that are not leaves at depth maxd\&. Zero if not used
.RE
.RS 4
\fB\-minheight\fR jobs are scheduled in increasing order by height in the search tree (default is LIFO)
.RE
.RS 4
\fB\-queue\fR jobs are scheduled in FIFO order (default is LIFO)
.RE
.RS 4
\fB\-restart <checkpoint file>\fR restart mplrs using previously created <checkpoint file>\&. If used with \-checkp file names should be different!
.RE
.RS 4
\fB\-scale <int>\fR[100] used by lmax
.RE
.RS 4
\fB\-stop <stopfile> \fR terminate mplrs if a file with name <stopfile> is created in the current directory
.RE
.RS 4
\fB\-stopafter <n>\fR exit after approximately <n> cobases have been computed (no guarantee about how many vertices/rays/facets computed)
.RE
.RS 4
\fB\-temp <prefix>\fR[/tmp/] store a temporary file for each process\&. Should be specified if /tmp not writeable\&. Using " \-temp\ \& \&./ " will write temporary files to the current directory
.RE
.RS 4
\fB\-time <seconds>\fR terminate mplrs after <seconds> of elapsed time
.RE
\fB redund/fel options
.RS 4
\fB\-j <int>\fR[0] if non-zero sets rows to m/(j*(np-2)) and disables lastrows
.RE
.RS 4
\fB\-lastp <int>\fR[10] the percentage of jobs to use lastrows
.RE
.RS 4
\fB\-lastrows <int>\fR[10] the number of rows for the last lastp jobs 
.RE
.RS 4
\fB\-redund\fR remove redundant rows from input file (also see \fBlrs\fR man page)
.RE
.RS 4
\fB\-rows <int>\fR[60] the number of rows per job 
.RE
.SS "-hist file format"
Example line:
.RS 4
   54.118141 94 279 94 0 0 373

   time since execution began in seconds (54.118141 here)
   number of busy workers (94 here)
   current size of job list (279 here)
   number of workers that may return unfinished jobs (94 here)
   unused (0 here)
   unused (0 here)
   total number of jobs that have been in the job list (373 here)
.RE
The second and fourth entries are similar and can differ due to
latencies.

.SS "-freq file format"
One integer per line
corresponding to the size of a subtree explored by a worker.
.SS "Example"
.PP
Input file mp5\&.ine is run with 8 processors\&. The output file mp5\&.mplrs is in the distribution\&. This produced 378 subtrees that were enumerated in parallel using 6 producer cores,\ \& 1 core controlling the run and 1 core collecting the output\&.
.sp
.if n \{\
.RS 4
.\}
.nf
      mai20% mpirun \-np 8 mplrs mp5\&.ine mp5\&.mplrs
      *mplrs:lrslib v\&.6\&.0 2015\&.7\&.13(lrsgmp\&.h)8 processes
      *Copyright (C) 1995,2015, David Avis\ \&\ \& avis@cs\&.mcgill\&.ca
      *Input taken from mp5\&.ine
      *Output written to: mp5\&.mplrs
      *Starting depth of 2 maxcobases=50 maxdepth=0 lmin=3 lmax=3 scale=100
      *Phase 1 time: 0 seconds\&.
      *Total number of jobs: 378, L became empty 4 times
      *Totals: vertices=32 rays=0 bases=9041 integer\-vertices=16
      *Elapsed time: 1 seconds\&.
      2\&.285u 0\&.137s 0:01\&.86 129\&.5%\ \&\ \&\ \& 0+0k 0+9976io 36pf+0w
    
.fi
.if n \{\
.RE
.\}
.SS Author
Charles Jordan <skip at res dot otaru-uc dot ac dot jp >
.SS "See also"
.BR lrs (1),
.BR lrslib (5)
