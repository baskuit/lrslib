2022.2.15     For v 7.2


3. After restarting mplrs insert a line 3 to the output file with:
*Restarted from file.cp

This is hacked (inefficiently) in the mlrs script for now.

4. In mplrs headers is :
Starting depth of 2 maxcobases=50 maxdepth=0 lmin=3 lmax=3 scale=100

Not sure the meaning of maxdepth=0. It could be removed or lrs could set
R->maxdepth=Q->maxdepth in the first stage 0 and this value could be printed here.

> This is the budget parameter -maxd for non-initial jobs.  The default is 0
> (disabled); by default only -maxc is used as in the user guide.

>> Perhaps use maxc= and maxd= matching the parameters in the call line
>> and only print parameters that are different than defaults?

How about -h or -help to get a list of parameters?
------------------------------------------------------------------------------------------
Maybe for v 7.3?

1. lrs can be used to estimated the size of a subtree given by a restart.
Eg. mp5.ine with 
printcobasis 
contains output:
V#13 R#0 B#698 h=2 facets  28 29 31 32 33 35 36 37 39 40 I#30 det= 16 in_det= 16 z= 4 
 1  0  0  0  1  0  0  1  0  1  1 

If we modify mp5.ine after the "end" with
printcobasis
restart 0 0 0 2  28 29 31 32 33 35 36 37 39 40  /* counts zero for subtree search */
mindepth 1              /* one less than the height h of the restart node (here h=2)*/

we get
lrs:lrslib_v.7.2_2021.12.3(64bit,lrslong.h,hybrid_arithmetic)
*Input taken from  mp5.ine
mp5
printcobasis
*restart V#0 R#0 B#0 h=2 facets 28 29 31 32 33 35 36 37 39 40
*mindepth  1
V#1 R#0 B#350 h=5 facets  27 28 29 31 32 34 36 37 39 40 I#30 det= 16 in_det= 16 z= 6 
 1  1  0  0  1  1  1  0  0  1  1 
V#2 R#0 B#891 h=6 facets  8 11 19 23 24 31 32 34 36 40 I#10 det= 48 in_det= 48 z= 10/3 
 1  2/3  1/3  2/3  2/3  1/3  2/3  2/3  1/3  1/3  2/3 
V#3 R#0 B#968 h=9 facets  4 6 7 10 13 19 23 24 31 33 I#10 det= 48 in_det= 48 z= 16/3 
 1  1/3  2/3  1/3  1/3  1/3  2/3  2/3  1/3  1/3  2/3 
end
*Totals: vertices=3 rays=0 bases=1029 integer_vertices=1  max_vertex_depth=9
*Dictionary Cache: max size= 14 misses= 2/1031   Tree Depth= 14

The subtree has 3 vertices and 1029 cobases (excluding the subtree root)
To get subtree size estimates also add:

maxdepth 5          /* height in the full tree, ie 5-2=3 levels down from subtree root */
estimates 10        /* 10 estimates averaged from each cobasis at height 5 in the full tree */

we get

lrs:lrslib_v.7.2_2021.12.3(64bit,lrslong.h,hybrid_arithmetic)
*Input taken from  mp5.ine
mp5
printcobasis
*restart V#0 R#0 B#0 h=2 facets 28 29 31 32 33 35 36 37 39 40
*mindepth  1
*maxdepth 5
*estimates 10
V#1 R#0 B#40 h=5 facets  27 28 29 31 32 34 36 37 39 40 I#30 det= 16 in_det= 16 z= 6 
 1  1  0  0  1  1  1  0  0  1  1 
end
*Tree truncated at depth 5
*Totals: vertices=1 rays=0 bases=181 integer_vertices=1  max_vertex_depth=5
*Estimates: vertices=3 rays=0 bases=1059 integer_vertices=1 

If mplrs uses lrs for subtree estimation the *Estimates totals are the ones to use.

